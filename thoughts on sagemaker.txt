Model training allows fairly fine grained control.
Comes with some versioning built in since all parameters and metrics are stored for each training job.

It can take several minutes from launching your training job until the actual training starts. Take a while to discover any mistakes made.
Using notebooks with an active gpu instance is probably better, at the very least in the development phase. 
Training jobs still have a lot of the nitty gritty details, at least for image classification, so might as well go all the way

I'm curious how much it will cost - do I pay a full hour for each job i launch even if it completes or fails in 5 minutes?

Doing transfer learning with net pretrained on imagenet was veeeery easy

testing different hyperparameters is fairly quick when you can launch N instances instead of running locally

Example training status log:

Start time
End time
Description
Starting	May 08, 2019 07:47 UTC	May 08, 2019 07:51 UTC	Preparing the instances for training
Downloading	May 08, 2019 07:51 UTC	May 08, 2019 07:52 UTC	Downloading input data
Training	May 08, 2019 07:52 UTC	May 08, 2019 07:53 UTC	Training image download completed. Training in progress.
Uploading	May 08, 2019 07:53 UTC	May 08, 2019 07:53 UTC	Uploading generated training model
Failed		May 08, 2019 07:53 UTC	May 08, 2019 07:53 UTC	Training job failed

Couldn't get image to accept the RecordIO file I generated with im2rec, so had to upload .lst and image files separately instead.

make sure you launch with enough storage space to store final model, otherwise you'll train the whole thing then fail at save time


default image classification with 44 layers, 30 epochs:
training accuracy:   0.994
validation accuracy: 0.982
test: ?



default image classification with 44 layers, 50 epochs:
training accuracy:   0.997
validation accuracy: 0.987
test: ?

default image classification with 34 layers, 50 epochs, transfer learning w/ imagenet:
training accuracy: 0.989  
validation accuracy: 0.988
test: ?

default image classification with 34 layers, 100 epochs, transfer learning w/ imagenet:
training accuracy: 994
validation accuracy: 983
test: ?
